"use client";

import { useState, useEffect } from "react";
import { FontAwesomeIcon } from "@fortawesome/react-fontawesome";
import { faPencil, faEye, faTrashCan } from "@fortawesome/free-solid-svg-icons";
import { formatEventDate } from "../utils/formatDate";
import { useRouter } from "next/navigation";

interface EventRowProps {
  eventTitle: string;
  eventDateTime: string;
  id: string;
}

const EventRow: React.FC = () => {
  const [events, setEvents] = useState<EventRowProps[]>([]);
  const [loading, setLoading] = useState<boolean>(true);
  const router = useRouter();

  const handleEdit = (id: string) => {
    router.push(`/admin/panel/${id}`);
  };

  const handleViewClick = (id: string) => {
    router.push(`/admin/panel/view/${id}`);
  };

  const handleDelete = (id: string) => {
    // lÃ³gica para eliminar el evento
  };

  useEffect(() => {
    const fetchEvents = async () => {
      try {
        const response = await fetch("http://localhost:5022/api/EventsCa/List");
        const data = await response.json();
        setEvents(data);
      } catch (error) {
        console.error("Error fetching events:", error);
      } finally {
        setLoading(false);
      }
    };

    fetchEvents();
  }, []);

  return (
    <div>
      {loading ? (
        <p>Loading...</p>
      ) : (
        events.map((event) => (
          <div key={event.id} className="flex py-1 px-8 border-b border-cas-gray-light">
            <div className="flex-initial w-5/12 flex items-center">{event.eventTitle}</div>
            <div className="flex-1 flex px-4 items-center">
              {formatEventDate(event.eventDateTime)}
            </div>
            <div className="flex-1 flex justify-end items-center space-x-4">
              <button onClick={() => handleEdit(event.id)}>
                <FontAwesomeIcon
                  icon={faPencil}
                  size="lg"
                  className="h-5 w-5 text-cas-white bg-cas-green rounded-full p-[0.45rem] hover:shadow-md hover:opacity-90"
                />
              </button>
              <button onClick={() => handleViewClick(event.id)}>
                <FontAwesomeIcon
                  icon={faEye}
                  size="lg"
                  className="h-5 w-5 text-cas-white bg-cas-green rounded-full p-[0.45rem] hover:shadow-md hover:opacity-90"
                />
              </button>
              <button onClick={() => handleDelete(event.id)}>
                <FontAwesomeIcon
                  icon={faTrashCan}
                  size="lg"
                  className="h-5 w-5 text-cas-white bg-cas-green rounded-full p-[0.45rem] hover:shadow-md hover:opacity-90"
                />
              </button>
            </div>
          </div>
        ))
      )}
    </div>
  );
};

export default EventRow;
